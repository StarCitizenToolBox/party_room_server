syntax = "proto3";
option go_package = "../protos";

service IndexService {
  rpc PingServer (PingData) returns (PingData) {}
  rpc GetRoomTypes (Empty) returns (RoomTypesData){}
  rpc CreateRoom (RoomData) returns (RoomData){}
  rpc GetRoomList(RoomListPageReqData) returns (RoomListData) {}
  rpc TouchUser(PreUser) returns (RoomData) {}
  rpc JoinRoom(PreUser) returns (stream RoomUpdateMessage){}
  rpc LeaveRoom(PreUser) returns (BaseRespData){}
}

message Empty {}

message BaseRespData {
  int32  code = 1;
  string message = 2;
}

message BasePageRespData {
  int32  code = 1;
  string message = 2;
  bool hasNext = 3;
  uint64 curPageNum = 4;
  int64 pageSize = 5;
}

message PingData {
  string data = 1;
  sint64 clientVersion = 2;
  sint64 serverVersion = 3;
}

enum RoomStatus {
  All = 0;
  Open = 1;
  Private = 2;
  Full = 3;
  Closed = 4;
  WillOffline = 5;
  Offline = 6;
}

enum RoomSortType {
  Default = 0;
  MostPlayerNumber = 1;
  MinimumPlayerNumber = 2;
  RecentlyCreated = 3;
  OldestCreated = 4;
}

message RoomTypesData {
  repeated RoomType roomTypes = 1;
}

message RoomType {
  string id = 1;
  string name = 2;
  string icon = 3;
  string desc = 4;
  repeated RoomSubtype subTypes = 5;
}

message RoomSubtype {
  string id = 1;
  string name = 2;
}

message RoomData {
  string id = 1;
  string roomTypeID = 2;
  repeated string roomSubTypeIds = 3;
  string owner = 4;
  int32 maxPlayer = 5;
  int64 createTime = 6;
  int32 curPlayer = 7;
  RoomStatus status = 8;
  string deviceUUID = 9;
  string announcement = 10;
  string avatar = 11;
  int64 updateTime = 12;
}

message RoomListPageReqData {
  string typeID = 1;
  string subTypeID = 2;
  RoomStatus status = 3;
  RoomSortType sort = 4;
  uint64 pageNum = 5;
}

message RoomListData {
  BasePageRespData pageData = 1;
  repeated RoomData rooms = 2;
}

message PreUser {
  string userName = 1;
  string deviceUUID = 2;
  string roomID = 3;
}

enum RoomUserStatus {
  RoomUserStatusJoin = 0; // 用户已加入房间
  RoomUserStatusLostOffline = 1; // 用户即将离线
  RoomUserStatusLeave = 2; // 用户已离开
  RoomUserStatusWaitingConnect = 3; // 用户已占座，等待连接
}

enum RoomUpdateType {
  RoomUpdateData = 0; // 普通数据更新
  RoomClose = 1; // 房间被服务器关闭
}

message RoomUserData {
  string  id = 1;
  string  playerName = 2;
  string  Avatar = 3;
  RoomUserStatus status = 4;
}

message RoomUpdateMessage {
  RoomData roomData = 1;
  repeated RoomUserData usersData = 2;
  RoomUpdateType roomUpdateType = 3;
}